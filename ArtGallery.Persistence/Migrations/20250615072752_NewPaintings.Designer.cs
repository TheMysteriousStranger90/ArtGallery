// <auto-generated />
using System;
using ArtGallery.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArtGallery.Persistence.Migrations
{
    [DbContext(typeof(ArtGalleryDbContext))]
    [Migration("20250615072752_NewPaintings")]
    partial class NewPaintings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtGallery.Domain.Entities.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21122"),
                            BirthDate = new DateTime(1848, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4866),
                            DeathDate = new DateTime(1926, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Viktor",
                            IsDeleted = false,
                            LastName = "Vasnetsov",
                            Nationality = "Russian"
                        },
                        new
                        {
                            Id = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21123"),
                            BirthDate = new DateTime(1856, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4878),
                            DeathDate = new DateTime(1910, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mikhail",
                            IsDeleted = false,
                            LastName = "Vrubel",
                            Nationality = "Russian"
                        },
                        new
                        {
                            Id = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21124"),
                            BirthDate = new DateTime(1817, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4882),
                            DeathDate = new DateTime(1900, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ivan",
                            IsDeleted = false,
                            LastName = "Aivazovsky",
                            Nationality = "Russian"
                        },
                        new
                        {
                            Id = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21125"),
                            BirthDate = new DateTime(1830, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4885),
                            DeathDate = new DateTime(1897, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alexei",
                            IsDeleted = false,
                            LastName = "Savrasov",
                            Nationality = "Russian"
                        },
                        new
                        {
                            Id = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21212"),
                            BirthDate = new DateTime(1452, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4887),
                            DeathDate = new DateTime(1519, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Leonardo",
                            IsDeleted = false,
                            LastName = "da Vinci",
                            Nationality = "Italian"
                        },
                        new
                        {
                            Id = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21213"),
                            BirthDate = new DateTime(1475, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4891),
                            DeathDate = new DateTime(1564, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michelangelo",
                            IsDeleted = false,
                            LastName = "Buonarroti",
                            Nationality = "Italian"
                        },
                        new
                        {
                            Id = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21214"),
                            BirthDate = new DateTime(1445, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4906),
                            DeathDate = new DateTime(1510, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sandro",
                            IsDeleted = false,
                            LastName = "Botticelli",
                            Nationality = "Italian"
                        },
                        new
                        {
                            Id = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21215"),
                            BirthDate = new DateTime(1571, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4909),
                            DeathDate = new DateTime(1610, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michelangelo Merisi",
                            IsDeleted = false,
                            LastName = "da Caravaggio",
                            Nationality = "Italian"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.ArtistImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("ArtistImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c6aeae0-5c40-4085-8993-7d7b5db21130"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21122"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5009),
                            IsDeleted = false,
                            IsMain = true,
                            PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/4/4e/Wiktor_Michajlowitsch_Wassnezow_003.jpg",
                            PublicId = "artist_vasnetsov"
                        },
                        new
                        {
                            Id = new Guid("0c6aeae0-5c40-4085-8993-7d7b5db21131"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21123"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5012),
                            IsDeleted = false,
                            IsMain = true,
                            PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/f/fb/Mikhail_Vrubel_-_self-portrait_%281904%2C_GTG%29.jpg",
                            PublicId = "artist_vrubel"
                        },
                        new
                        {
                            Id = new Guid("0c6aeae0-5c40-4085-8993-7d7b5db21132"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21124"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5015),
                            IsDeleted = false,
                            IsMain = true,
                            PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/c/c6/Aivazovsky_-_Self-portrait_1874.jpg",
                            PublicId = "artist_aivazovsky"
                        },
                        new
                        {
                            Id = new Guid("0c6aeae0-5c40-4085-8993-7d7b5db21133"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21125"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5016),
                            IsDeleted = false,
                            IsMain = true,
                            PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/7/7a/Savrasov_photo.JPG",
                            PublicId = "artist_savrasov"
                        },
                        new
                        {
                            Id = new Guid("0c6aeae0-5c40-4085-8993-7d7b5db21220"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21212"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5020),
                            IsDeleted = false,
                            IsMain = true,
                            PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/Leonardo_self.jpg/256px-Leonardo_self.jpg",
                            PublicId = "artist_davinci"
                        },
                        new
                        {
                            Id = new Guid("0c6aeae0-5c40-4085-8993-7d7b5db21221"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21213"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5022),
                            IsDeleted = false,
                            IsMain = true,
                            PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Miguel_%C3%81ngel%2C_por_Daniele_da_Volterra_%28detalle%29.jpg/256px-Miguel_%C3%81ngel%2C_por_Daniele_da_Volterra_%28detalle%29.jpg",
                            PublicId = "artist_michelangelo"
                        },
                        new
                        {
                            Id = new Guid("0c6aeae0-5c40-4085-8993-7d7b5db21222"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21214"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5025),
                            IsDeleted = false,
                            IsMain = true,
                            PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Sandro_Botticelli_083.jpg/256px-Sandro_Botticelli_083.jpg",
                            PublicId = "artist_botticelli"
                        },
                        new
                        {
                            Id = new Guid("0c6aeae0-5c40-4085-8993-7d7b5db21223"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21215"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5027),
                            IsDeleted = false,
                            IsMain = true,
                            PictureUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Bild-Ottavio_Leoni%2C_Caravaggio.jpg/256px-Bild-Ottavio_Leoni%2C_Caravaggio.jpg",
                            PublicId = "artist_caravaggio"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Biography", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("References")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId")
                        .IsUnique();

                    b.ToTable("Biographies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc6aeae0-5c40-4085-8993-7d7b5db21126"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21122"),
                            Content = "Viktor Mikhailovich Vasnetsov was a Russian painter who specialized in mythological and historical subjects. He is considered the co-founder of Russian folklorist and romantic nationalistic painting and a key figure in the Russian revivalist movement. His notable works include After Prince Igor's Battle with the Polovtsy, Knight at the Crossroads, Bogatyrs, and Alyonushka.",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4950),
                            IsDeleted = false,
                            References = "Korotkevich, V.N. Viktor Vasnetsov: The Artist's Work. Leningrad, 1962.",
                            ShortDescription = "One of the key figures in the Russian revivalist movement"
                        },
                        new
                        {
                            Id = new Guid("fc6aeae0-5c40-4085-8993-7d7b5db21127"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21123"),
                            Content = "Mikhail Aleksandrovich Vrubel was a Russian painter who specialized in symbolist paintings of mythological themes. His contemporaries often saw him as strange and mentally unstable due to his unique style of painting. At the time of his death, Vrubel was among the most controversial painters in Russian art. His innovative art is now considered a bridge connecting the traditional art of the 19th century with the modernism of the 20th century.",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4955),
                            IsDeleted = false,
                            References = "Gomberg-Verzhbinskaia, E.P. Vrubel. Moscow, 1959.",
                            ShortDescription = "A Russian symbolist painter known for his unusual style and technique"
                        },
                        new
                        {
                            Id = new Guid("fc6aeae0-5c40-4085-8993-7d7b5db21128"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21124"),
                            Content = "Ivan Konstantinovich Aivazovsky was a Russian Romantic painter who is considered one of the greatest masters of marine art. He was born into an Armenian family in the town of Feodosia in Crimea and was mostly known for his seascapes, which constitute more than half of his paintings. During his almost 60-year career, he created around 6,000 paintings, making him one of the most prolific artists of his time.",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4957),
                            IsDeleted = false,
                            References = "Caffiero, G., Samarine, I. Seas, Cities & Dreams: The Paintings of Ivan Aivazovsky. London, 2000.",
                            ShortDescription = "One of the greatest masters of marine art in history"
                        },
                        new
                        {
                            Id = new Guid("fc6aeae0-5c40-4085-8993-7d7b5db21129"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21125"),
                            Content = "Alexei Kondratyevich Savrasov was a Russian landscape painter and creator of the 'mood landscape' genre. He is credited with developing the lyrical landscape style, and his painting The Rooks Have Come Back (1871) is considered one of the most significant works of Russian landscape painting. Savrasov's life was marked by personal tragedy and alcoholism in his later years, but his influence on Russian landscape painting was immense.",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4960),
                            IsDeleted = false,
                            References = "Novouspensky, N. Alexei Savrasov. Leningrad, 1982.",
                            ShortDescription = "Founder of the lyrical landscape style in Russian painting"
                        },
                        new
                        {
                            Id = new Guid("fc6aeae0-5c40-4085-8993-7d7b5db21216"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21212"),
                            Content = "Leonardo da Vinci was an Italian polymath of the High Renaissance who was active as a painter, draughtsman, engineer, scientist, theorist, sculptor and architect. While his fame initially rested on his achievements as a painter, he also became known for his notebooks, in which he made drawings and notes on science and invention. These involved a variety of subjects including anatomy, astronomy, botany, cartography, painting, and paleontology.",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4963),
                            IsDeleted = false,
                            References = "Kemp, Martin. Leonardo da Vinci: The Marvellous Works of Nature and Man. Oxford, 2006.",
                            ShortDescription = "Renaissance polymath and painter of the Mona Lisa"
                        },
                        new
                        {
                            Id = new Guid("fc6aeae0-5c40-4085-8993-7d7b5db21217"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21213"),
                            Content = "Michelangelo di Lodovico Buonarroti Simoni was an Italian sculptor, painter, architect, and poet of the High Renaissance. Born in the Republic of Florence, his work exerted an unparalleled influence on the development of Western art. Considered the greatest living artist during his lifetime, he has since been described as one of the greatest artists of all time.",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4966),
                            IsDeleted = false,
                            References = "Wallace, William E. Michelangelo: The Artist, the Man and His Times. Cambridge, 2010.",
                            ShortDescription = "Renaissance master sculptor and painter of the Sistine Chapel"
                        },
                        new
                        {
                            Id = new Guid("fc6aeae0-5c40-4085-8993-7d7b5db21218"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21214"),
                            Content = "Alessandro di Mariano di Vanni Filipepi, known as Sandro Botticelli, was an Italian painter of the Early Renaissance. Botticelli's posthumous reputation suffered until the late 19th century, when he was rediscovered by the Pre-Raphaelites who stimulated a reappraisal of his work. Since then, his paintings have been seen to represent the linear grace of Early Renaissance painting.",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4969),
                            IsDeleted = false,
                            References = "Lightbown, Ronald. Sandro Botticelli: Life and Work. London, 1989.",
                            ShortDescription = "Early Renaissance painter famous for The Birth of Venus"
                        },
                        new
                        {
                            Id = new Guid("fc6aeae0-5c40-4085-8993-7d7b5db21219"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21215"),
                            Content = "Michelangelo Merisi da Caravaggio was an Italian painter active in Rome for most of his artistic life. During the final four years of his life he moved between Naples, Malta, and Sicily until his death. His paintings have been characterized by art critics as combining a realistic observation of the human state, both physical and emotional, with a dramatic use of lighting.",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4971),
                            IsDeleted = false,
                            References = "Langdon, Helen. Caravaggio: A Life. New York, 1998.",
                            ShortDescription = "Baroque painter renowned for his revolutionary use of light and shadow"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c6aeae0-5c40-4085-8993-7d7b5db21107"),
                            CountryId = new Guid("8c6aeae0-5c40-4085-8993-7d7b5db21106"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4650),
                            IsDeleted = false,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = new Guid("9c6aeae0-5c40-4085-8993-7d7b5db21108"),
                            CountryId = new Guid("8c6aeae0-5c40-4085-8993-7d7b5db21106"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4652),
                            IsDeleted = false,
                            Name = "Saint Petersburg"
                        },
                        new
                        {
                            Id = new Guid("9c6aeae0-5c40-4085-8993-7d7b5db21201"),
                            CountryId = new Guid("8c6aeae0-5c40-4085-8993-7d7b5db21200"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4654),
                            IsDeleted = false,
                            Name = "Florence"
                        },
                        new
                        {
                            Id = new Guid("9c6aeae0-5c40-4085-8993-7d7b5db21202"),
                            CountryId = new Guid("8c6aeae0-5c40-4085-8993-7d7b5db21200"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4657),
                            IsDeleted = false,
                            Name = "Rome"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c6aeae0-5c40-4085-8993-7d7b5db21106"),
                            Code = "RU",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4383),
                            IsDeleted = false,
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("8c6aeae0-5c40-4085-8993-7d7b5db21200"),
                            Code = "IT",
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4387),
                            IsDeleted = false,
                            Name = "Italy"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Exhibition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalVenueAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MuseumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MuseumId");

                    b.ToTable("Exhibitions");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21111"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4738),
                            Description = "Art depicting scenes from mythology or folklore",
                            IsDeleted = false,
                            Name = "Mythological Art"
                        },
                        new
                        {
                            Id = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21112"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4740),
                            Description = "Art depicting natural scenery, such as mountains, valleys, trees, rivers, and forests",
                            IsDeleted = false,
                            Name = "Landscape"
                        },
                        new
                        {
                            Id = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21113"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4742),
                            Description = "Art depicting the sea or maritime scenes",
                            IsDeleted = false,
                            Name = "Seascape"
                        },
                        new
                        {
                            Id = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21114"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4744),
                            Description = "Art that emphasizes the expression of ideas through symbols",
                            IsDeleted = false,
                            Name = "Symbolism"
                        },
                        new
                        {
                            Id = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21205"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4746),
                            Description = "Art from the Renaissance period characterized by realistic depiction and classical themes",
                            IsDeleted = false,
                            Name = "Renaissance"
                        },
                        new
                        {
                            Id = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21206"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4747),
                            Description = "Art depicting religious themes and biblical scenes",
                            IsDeleted = false,
                            Name = "Religious Art"
                        },
                        new
                        {
                            Id = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21207"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4749),
                            Description = "Art depicting individual persons or groups of people",
                            IsDeleted = false,
                            Name = "Portrait"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Museum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WebsiteUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Museums");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21109"),
                            Address = "Lavrushinsky Ln, 10, Moscow, Russia, 119017",
                            CityId = new Guid("9c6aeae0-5c40-4085-8993-7d7b5db21107"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4698),
                            Description = "The State Tretyakov Gallery is an art gallery in Moscow, Russia, the foremost depository of Russian fine art in the world.",
                            IsDeleted = false,
                            Name = "The State Tretyakov Gallery",
                            WebsiteUrl = "https://www.tretyakovgallery.ru/en/"
                        },
                        new
                        {
                            Id = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21110"),
                            Address = "Inzhenernaya St, 4, St Petersburg, Russia, 191186",
                            CityId = new Guid("9c6aeae0-5c40-4085-8993-7d7b5db21108"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4701),
                            Description = "The State Russian Museum is the world's largest depository of Russian fine art. It is also one of the largest museums in the country.",
                            IsDeleted = false,
                            Name = "The State Russian Museum",
                            WebsiteUrl = "https://rusmuseum.ru/en/"
                        },
                        new
                        {
                            Id = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21203"),
                            Address = "Piazzale degli Uffizi, 6, 50122 Firenze FI, Italy",
                            CityId = new Guid("9c6aeae0-5c40-4085-8993-7d7b5db21201"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4704),
                            Description = "The Uffizi Gallery is a prominent art museum located adjacent to the Piazza della Signoria in the Historic Centre of Florence in the region of Tuscany, Italy.",
                            IsDeleted = false,
                            Name = "Uffizi Gallery",
                            WebsiteUrl = "https://www.uffizi.it/en"
                        },
                        new
                        {
                            Id = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21204"),
                            Address = "00120 Vatican City",
                            CityId = new Guid("9c6aeae0-5c40-4085-8993-7d7b5db21202"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4707),
                            Description = "The Vatican Museums are the public museums of the Vatican City. They display works from the immense collection amassed by the Catholic Church and the papacy throughout the centuries.",
                            IsDeleted = false,
                            Name = "Vatican Museums",
                            WebsiteUrl = "https://www.museivaticani.va/"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Painting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationYear")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medium")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("MuseumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaintType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.HasIndex("MuseumId");

                    b.ToTable("Paintings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21134"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21122"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5219),
                            CreationYear = 1898,
                            Description = "Also known as Three Bogatyrs, this painting depicts three of the most legendary bogatyrs (medieval Russian knights): Dobrynya Nikitich, Ilya Muromets and Alyosha Popovich. They are portrayed on patrol together in the frontier of the Russian land.",
                            Dimensions = "295.3 cm × 446 cm (116.3 in × 175.6 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21111"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/d/d3/Viktor_Vasnetsov_-_Богатыри_-_Google_Art_Project.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21109"),
                            PaintType = 0,
                            Title = "Bogatyrs"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21135"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21122"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5226),
                            CreationYear = 1881,
                            Description = "A painting depicting a young woman, Alyonushka, a character from Russian folk tales, sitting forlornly by a pond. The painting is notable for its depiction of the Russian landscape and its melancholic mood.",
                            Dimensions = "177 cm × 121 cm (69.7 in × 47.6 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21111"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/3/33/Vasnetsov_Alenushka.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21109"),
                            PaintType = 0,
                            Title = "Alyonushka"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21136"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21123"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5231),
                            CreationYear = 1890,
                            Description = "One of Vrubel's most famous works, depicting a winged demon sitting in a pensive pose. The painting is characterized by its unusual crystalline form and vibrant colors.",
                            Dimensions = "114 cm × 211 cm (44.9 in × 83.1 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21114"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/9/9f/Vrubel_Demon.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21109"),
                            PaintType = 0,
                            Title = "Demon Seated"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21137"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21123"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5236),
                            CreationYear = 1902,
                            Description = "The last of Vrubel's Demon series, showing the defeated demon with broken wings. This painting is associated with the deterioration of Vrubel's mental health.",
                            Dimensions = "139 cm × 387 cm (54.7 in × 152.4 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21114"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/1/17/Vrubel_Fallen_Demon.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21109"),
                            PaintType = 0,
                            Title = "Demon Downcast"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21138"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21124"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5241),
                            CreationYear = 1850,
                            Description = "Aivazovsky's most famous painting, showing a group of people clinging to debris from a shipwreck, facing a large wave at sunrise. The title refers to the nautical belief that the ninth wave is the largest in a series of waves.",
                            Dimensions = "221 cm × 332 cm (87.0 in × 130.7 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21113"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/5/54/Aivazovsky%2C_Ivan_-_The_Ninth_Wave.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21110"),
                            PaintType = 0,
                            Title = "The Ninth Wave"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21139"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21124"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5246),
                            CreationYear = 1849,
                            Description = "A dramatic seascape depicting a violent storm at night, with a ship struggling against massive waves. The painting showcases Aivazovsky's mastery in depicting light and water.",
                            Dimensions = "100 cm × 141 cm (39.4 in × 55.5 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21113"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/7/70/Ivan_Aivazovsky_-_Ship_in_the_Stormy_Sea.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21110"),
                            PaintType = 0,
                            Title = "Storm on the Sea at Night"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21140"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21125"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5250),
                            CreationYear = 1871,
                            Description = "Savrasov's most famous work, depicting the early spring landscape with rooks nesting in birch trees. The painting conveys the sense of awakening nature and hope.",
                            Dimensions = "62 cm × 48.5 cm (24.4 in × 19.1 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21112"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/1/12/RooksBackOfSavrasov.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21109"),
                            PaintType = 0,
                            Title = "The Rooks Have Returned"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21141"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21125"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5264),
                            CreationYear = 1873,
                            Description = "A serene landscape depicting a countryside road in rural Russia. The painting demonstrates Savrasov's talent for capturing the subtle poetry of simple Russian landscapes.",
                            Dimensions = "58.8 cm × 80.5 cm (23.1 in × 31.7 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21112"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/7/7a/Алексей_К._Саврасов_-_Проселок_%281873%29.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21109"),
                            PaintType = 0,
                            Title = "Countryside Road"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21224"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21212"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5268),
                            CreationYear = 1503,
                            Description = "The Mona Lisa is a half-length portrait painting by Italian artist Leonardo da Vinci. Considered an archetypal masterpiece of the Italian Renaissance, it has been described as 'the best known, the most visited, the most written about, the most sung about, the most parodied work of art in the world'.",
                            Dimensions = "77 cm × 53 cm (30 in × 21 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21207"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg/687px-Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg",
                            IsDeleted = false,
                            Medium = "Oil on poplar panel",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21203"),
                            PaintType = 0,
                            Title = "Mona Lisa"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21225"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21212"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5274),
                            CreationYear = 1498,
                            Description = "The Last Supper is a mural painting by Italian High Renaissance Leonardo da Vinci housed by the refectory of the Convent of Santa Maria delle Grazie in Milan, Italy. It depicts the scene of the Last Supper of Jesus with his apostles.",
                            Dimensions = "460 cm × 880 cm (181 in × 346 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21206"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/%C3%9Altima_Cena_-_Da_Vinci_5.jpg/800px-%C3%9Altima_Cena_-_Da_Vinci_5.jpg",
                            IsDeleted = false,
                            Medium = "Tempera and oil on gesso",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21203"),
                            PaintType = 4,
                            Title = "The Last Supper"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21226"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21213"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5278),
                            CreationYear = 1512,
                            Description = "The Creation of Adam is a fresco painting by Italian artist Michelangelo, which forms part of the Sistine Chapel's ceiling, painted c. 1508–1512. It illustrates the Biblical creation narrative from the Book of Genesis in which God gives life to Adam, the first man.",
                            Dimensions = "280 cm × 570 cm (110 in × 224 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21206"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/0/0c/Creation_of_Adam_Michelangelo.jpg",
                            IsDeleted = false,
                            Medium = "Fresco",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21204"),
                            PaintType = 7,
                            Title = "The Creation of Adam"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21227"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21213"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5283),
                            CreationYear = 1541,
                            Description = "The Last Judgment is a fresco by the Italian Renaissance painter Michelangelo covering the whole altar wall of the Sistine Chapel in Vatican City. It is a depiction of the Second Coming of Christ and the final and eternal judgment by God of all humanity.",
                            Dimensions = "1370 cm × 1200 cm (539 in × 472 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21206"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Last_Judgement_%28Michelangelo%29.jpg/600px-Last_Judgement_%28Michelangelo%29.jpg",
                            IsDeleted = false,
                            Medium = "Fresco",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21204"),
                            PaintType = 7,
                            Title = "The Last Judgment"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21228"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21214"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5287),
                            CreationYear = 1485,
                            Description = "The Birth of Venus is a painting by Italian artist Sandro Botticelli, probably executed in the mid 1480s. It depicts the goddess Venus arriving at the shore after her birth, when she had emerged from the sea fully-grown.",
                            Dimensions = "172.5 cm × 278.9 cm (67.9 in × 109.6 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21111"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Sandro_Botticelli_-_La_nascita_di_Venere_-_Google_Art_Project_-_edited.jpg/800px-Sandro_Botticelli_-_La_nascita_di_Venere_-_Google_Art_Project_-_edited.jpg",
                            IsDeleted = false,
                            Medium = "Tempera on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21203"),
                            PaintType = 4,
                            Title = "The Birth of Venus"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21229"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21214"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5293),
                            CreationYear = 1482,
                            Description = "Primavera, also known as Allegory of Spring, is a large panel painting in tempera paint by the Italian Renaissance painter Sandro Botticelli made in the late 1470s or early 1480s. The painting has been described as one of the most written about, and most controversial paintings in the world.",
                            Dimensions = "202 cm × 314 cm (80 in × 124 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21111"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Botticelli-primavera.jpg/800px-Botticelli-primavera.jpg",
                            IsDeleted = false,
                            Medium = "Tempera on wood",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21203"),
                            PaintType = 4,
                            Title = "Primavera"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21230"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21215"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5297),
                            CreationYear = 1600,
                            Description = "The Calling of Saint Matthew is a masterpiece by Michelangelo Merisi da Caravaggio, depicting the moment when Jesus Christ inspires Matthew to follow him. It was completed in 1599-1600 for the Contarelli Chapel in the church of the French congregation San Luigi dei Francesi in Rome.",
                            Dimensions = "322 cm × 340 cm (127 in × 134 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21206"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/The_Calling_of_Saint_Matthew-Caravaggo_%281599-1600%29.jpg/800px-The_Calling_of_Saint_Matthew-Caravaggo_%281599-1600%29.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21204"),
                            PaintType = 0,
                            Title = "The Calling of Saint Matthew"
                        },
                        new
                        {
                            Id = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21231"),
                            ArtistId = new Guid("ec6aeae0-5c40-4085-8993-7d7b5db21215"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5301),
                            CreationYear = 1602,
                            Description = "Judith Beheading Holofernes is a painting by the Italian early Baroque artist Caravaggio, painted in 1598-1602. The painting depicts Judith beheading Holofernes, a scene from the deuterocanonical Book of Judith in the Old Testament.",
                            Dimensions = "144 cm × 195 cm (57 in × 77 in)",
                            GenreId = new Guid("cc6aeae0-5c40-4085-8993-7d7b5db21206"),
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/d/df/Caravaggio_-_Giuditta_e_Oloferne_%28ca._1599%29.jpg",
                            IsDeleted = false,
                            Medium = "Oil on canvas",
                            MuseumId = new Guid("bc6aeae0-5c40-4085-8993-7d7b5db21204"),
                            PaintType = 0,
                            Title = "Judith Beheading Holofernes"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.PaintingExhibition", b =>
                {
                    b.Property<Guid>("PaintingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExhibitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaintingId", "ExhibitionId");

                    b.HasIndex("ExhibitionId");

                    b.ToTable("PaintingExhibitions");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.PaintingImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PaintingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PaintingId");

                    b.ToTable("PaintingImages");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.PaintingTag", b =>
                {
                    b.Property<Guid>("PaintingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaintingId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PaintingTags");

                    b.HasData(
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21134"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21115"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5357),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21142"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21134"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21116"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5360),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21143"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21134"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21119"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5362),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21144"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21224"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21208"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5364),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21232"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21224"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21209"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5367),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21233"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21224"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21210"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5369),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21234"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21228"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21208"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5372),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21235"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21228"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21209"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5374),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21236"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21230"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21208"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5376),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21237"),
                            IsDeleted = false
                        },
                        new
                        {
                            PaintingId = new Guid("1c6aeae0-5c40-4085-8993-7d7b5db21230"),
                            TagId = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21211"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(5379),
                            Id = new Guid("2c6aeae0-5c40-4085-8993-7d7b5db21238"),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21115"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4783),
                            IsDeleted = false,
                            Name = "Russian Art"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21116"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4786),
                            IsDeleted = false,
                            Name = "19th Century"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21117"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4789),
                            IsDeleted = false,
                            Name = "Early 20th Century"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21118"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4790),
                            IsDeleted = false,
                            Name = "Romanticism"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21119"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4792),
                            IsDeleted = false,
                            Name = "Folklore"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21120"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4795),
                            IsDeleted = false,
                            Name = "Sea"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21121"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4797),
                            IsDeleted = false,
                            Name = "Spring"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21208"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4798),
                            IsDeleted = false,
                            Name = "Italian Art"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21209"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4800),
                            IsDeleted = false,
                            Name = "Renaissance"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21210"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4802),
                            IsDeleted = false,
                            Name = "Classical"
                        },
                        new
                        {
                            Id = new Guid("dc6aeae0-5c40-4085-8993-7d7b5db21211"),
                            CreatedDate = new DateTime(2025, 6, 15, 7, 27, 51, 383, DateTimeKind.Utc).AddTicks(4804),
                            IsDeleted = false,
                            Name = "Baroque"
                        });
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.UserFavoriteArtist", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("UserFavoriteArtist");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.UserFavoritePainting", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("PaintingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "PaintingId");

                    b.HasIndex("PaintingId");

                    b.ToTable("UserFavoritePainting");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.ArtistImage", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Artist", "Artist")
                        .WithMany("ArtistImage")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Biography", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Artist", "Artist")
                        .WithOne("Biography")
                        .HasForeignKey("ArtGallery.Domain.Entities.Biography", "ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.City", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Exhibition", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Museum", "Museum")
                        .WithMany()
                        .HasForeignKey("MuseumId");

                    b.Navigation("Museum");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Museum", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.City", "City")
                        .WithMany("Museums")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Painting", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Artist", "Artist")
                        .WithMany("Paintings")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtGallery.Domain.Entities.Genre", "Genre")
                        .WithMany("Paintings")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ArtGallery.Domain.Entities.Museum", "Museum")
                        .WithMany("Paintings")
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Artist");

                    b.Navigation("Genre");

                    b.Navigation("Museum");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.PaintingExhibition", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Exhibition", "Exhibition")
                        .WithMany("Paintings")
                        .HasForeignKey("ExhibitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtGallery.Domain.Entities.Painting", "Painting")
                        .WithMany("Exhibitions")
                        .HasForeignKey("PaintingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exhibition");

                    b.Navigation("Painting");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.PaintingImage", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Painting", "Painting")
                        .WithMany("PaintingImages")
                        .HasForeignKey("PaintingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Painting");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.PaintingTag", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Painting", "Painting")
                        .WithMany("Tags")
                        .HasForeignKey("PaintingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtGallery.Domain.Entities.Tag", "Tag")
                        .WithMany("Paintings")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Painting");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.UserFavoriteArtist", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Artist", "Artist")
                        .WithMany("UserFavoriteArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.UserFavoritePainting", b =>
                {
                    b.HasOne("ArtGallery.Domain.Entities.Painting", "Painting")
                        .WithMany("UserFavoritePaintings")
                        .HasForeignKey("PaintingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Painting");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Artist", b =>
                {
                    b.Navigation("ArtistImage");

                    b.Navigation("Biography")
                        .IsRequired();

                    b.Navigation("Paintings");

                    b.Navigation("UserFavoriteArtists");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.City", b =>
                {
                    b.Navigation("Museums");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Exhibition", b =>
                {
                    b.Navigation("Paintings");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Genre", b =>
                {
                    b.Navigation("Paintings");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Museum", b =>
                {
                    b.Navigation("Paintings");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Painting", b =>
                {
                    b.Navigation("Exhibitions");

                    b.Navigation("PaintingImages");

                    b.Navigation("Tags");

                    b.Navigation("UserFavoritePaintings");
                });

            modelBuilder.Entity("ArtGallery.Domain.Entities.Tag", b =>
                {
                    b.Navigation("Paintings");
                });
#pragma warning restore 612, 618
        }
    }
}
