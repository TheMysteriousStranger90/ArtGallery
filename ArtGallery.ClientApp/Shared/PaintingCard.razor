@using ArtGallery.ClientApp.Services

<div class="card h-100">
    @if (!string.IsNullOrEmpty(Painting?.ImageUrl))
    {
        <a href="@($"/paintings/{Painting.Id}")">
            <img src="@GetFullImageUrl(Painting.ImageUrl)" class="card-img-top" alt="@Painting.Title" style="object-fit: cover; height: 300px;">
        </a>
    }
    else
    {
        <a href="@($"/paintings/{Painting.Id}")">

            <div class="card-img-top d-flex align-items-center justify-content-center" style="height: 300px; background-color: #f8f9fa;">
                <span>No Image</span>
            </div>
        </a>
    }
    <div class="card-body d-flex flex-column">
        <h5 class="card-title">
            <a href="@($"/paintings/{Painting.Id}")" class="text-decoration-none">@Painting?.Title</a>
        </h5>
        <p class="card-text small text-muted">@Painting?.Artist?.FullName</p>
        @if (Painting?.CreationYear > 0)
        {
            <p class="card-text small">
                <small class="text-muted">@Painting.CreationYear</small>
            </p>
        }
    </div>
    <div class="card-footer">
        <a href="@($"/paintings/{Painting.Id}")" class="btn btn-sm btn-outline-primary w-100">Details</a>
    </div>
</div>

@code {
    [Parameter] public PaintingDto? Painting { get; set; }

    [Inject] public IConfiguration? Configuration { get; set; }

    private string GetFullImageUrl(string? relativeUrl)
    {
        if (string.IsNullOrEmpty(relativeUrl))
        {
            return "placeholder-image.png";
        }

        if (Uri.TryCreate(relativeUrl, UriKind.Absolute, out _))
        {
            return relativeUrl;
        }

        var apiBaseUrl = Configuration?["ApiBaseUrl"];
        if (string.IsNullOrEmpty(apiBaseUrl))
        {
            return relativeUrl.StartsWith("/") ? relativeUrl : $"/{relativeUrl}";
        }

        return $"{apiBaseUrl.TrimEnd('/')}/{relativeUrl.TrimStart('/')}";
    }

}