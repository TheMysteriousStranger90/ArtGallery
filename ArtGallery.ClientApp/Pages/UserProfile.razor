@page "/profile"
@using ArtGallery.ClientApp.Services
@using ArtGallery.ClientApp.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject IUsersService UsersService
@inject NavigationManager NavigationManager
@inject ILogger<UserProfile> Logger
@inject AuthenticationStateProvider AuthStateProvider
@attribute [Authorize]

<PageTitle>My Profile - Art Gallery</PageTitle>

<div class="users-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="page-title mb-0">My Profile</h1>
        @if (user?.Roles?.Contains("Administrator") == true)
        {
            <div class="admin-badge">
                <span class="badge bg-primary">
                    <i class="bi bi-shield-check me-1"></i>Administrator
                </span>
            </div>
        }
    </div>

    @if (isLoading)
    {
        <div class="loading-container">
            <div class="spinner-border loading-spinner" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="loading-text">Loading your profile...</p>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @errorMessage
        </div>
    }
    else if (user != null)
    {
        <nav aria-label="breadcrumb" class="my-3">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/">Home</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">My Profile</li>
            </ol>
        </nav>

        <div class="user-detail-content">
            <div class="row g-4">
                <!-- Left side - User information -->
                <div class="col-lg-5">
                    <div class="user-primary-info">
                        <div class="card user-detail-card">
                            <div class="card-header">
                                <h4 class="mb-0"><i class="bi bi-person-badge me-2"></i>Profile Information</h4>
                            </div>
                            <div class="card-body">
                                <div class="user-header d-flex align-items-center mb-4">
                                    <div class="user-avatar-large">
                                        <i class="bi bi-person-circle"></i>
                                    </div>
                                    <div class="user-name-details ms-3">
                                        <h2 class="user-full-name mb-1">@user.FirstName @user.LastName</h2>
                                        <p class="user-id mb-0">@user.UserName</p>
                                    </div>
                                </div>

                                <div class="user-details-grid">
                                    <div class="detail-item">
                                        <h5>Email</h5>
                                        <p>@user.Email</p>
                                    </div>

                                    <div class="detail-item">
                                        <h5>Last Active</h5>
                                        <p>
                                            @if (user.LastActive.HasValue)
                                            {
                                                @user.LastActive.Value.ToString("MMM dd, yyyy HH:mm")
                                            }
                                            else
                                            {
                                                <span class="text-muted">Never</span>
                                            }
                                        </p>
                                    </div>

                                    <div class="detail-item">
                                        <h5>Account Created</h5>
                                        <p>@user.Created.ToString("MMM dd, yyyy")</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- User Activity Stats -->
                    <div class="card user-detail-card mt-4">
                        <div class="card-header">
                            <h4 class="mb-0"><i class="bi bi-bar-chart me-2"></i>Your Activity</h4>
                        </div>
                        <div class="card-body">
                            <div class="stat-grid">
                                <div class="stat-item">
                                    <div class="stat-icon">
                                        <i class="bi bi-image-fill"></i>
                                    </div>
                                    <div class="stat-content">
                                        <h3>@user.FavoritePaintingsCount</h3>
                                        <p>Favorite Paintings</p>
                                    </div>
                                </div>
                                
                                <div class="stat-item">
                                    <div class="stat-icon">
                                        <i class="bi bi-person-heart"></i>
                                    </div>
                                    <div class="stat-content">
                                        <h3>@user.FavoriteArtistsCount</h3>
                                        <p>Favorite Artists</p>
                                    </div>
                                </div>
                                
                                <div class="stat-item">
                                    <div class="stat-icon">
                                        <i class="bi bi-calendar-check"></i>
                                    </div>
                                    <div class="stat-content">
                                        <h3>@((DateTime.Now - user.Created).Days)</h3>
                                        <p>Days as Member</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- User Roles (if any) -->
                    @if (user.Roles?.Any() == true)
                    {
                        <div class="card user-detail-card mt-4">
                            <div class="card-header">
                                <h4 class="mb-0"><i class="bi bi-person-lock me-2"></i>Account Type</h4>
                            </div>
                            <div class="card-body">
                                <div class="roles-list">
                                    @foreach (var role in user.Roles)
                                    {
                                        <div class="role-item">
                                            <span class="badge @(role == "Administrator" ? "bg-danger" : "bg-secondary") me-2">
                                                @role
                                            </span>
                                        </div>
                                    }
                                </div>
                                
                                @if (user.Roles.Contains("Administrator"))
                                {
                                    <div class="mt-3">
                                        <a href="/admin/users" class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-people-fill me-1"></i>User Management
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="action-buttons mt-4">
                <a href="/" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left me-1"></i>Back to Home
                </a>
                <button class="btn btn-outline-primary ms-2" @onclick="EditProfile">
                    <i class="bi bi-pencil me-1"></i>Edit Profile
                </button>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-warning">
            <i class="bi bi-question-circle-fill me-2"></i>
            Unable to load profile. Please try again later.
        </div>
        <a href="/" class="btn btn-outline-primary mt-3">
            <i class="bi bi-arrow-left me-1"></i>Return to Home
        </a>
    }
</div>

@code {
    private UserProfileDto user;
    private bool isLoading = true;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (!authState.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/login", forceLoad: true);
            return;
        }

        await LoadUserProfile();
    }

    private async Task LoadUserProfile()
    {
        isLoading = true;
        errorMessage = null;

        try
        {
            user = await UsersService.GetCurrentUserAsync();

            if (user == null)
            {
                errorMessage = "Failed to load your profile. Please try again later.";
                Logger.LogWarning("UsersService returned null for GetCurrentUserAsync");
            }
        }
        catch (ApiException ex)
        {
            Logger.LogError(ex, "API Error loading user profile. Status: {StatusCode}, Response: {Response}",
                ex.StatusCode, ex.Response);
            errorMessage = $"Error loading profile: {ex.Message}";
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading user profile");
            errorMessage = "An unexpected error occurred while loading your profile.";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void EditProfile()
    {
        if (user != null && !string.IsNullOrEmpty(user.Id))
        {
            NavigationManager.NavigateTo($"/admin/users/{user.Id}/edit");
        }
        else
        {
            Logger.LogWarning("Cannot navigate to edit profile: user ID is null or empty");
            errorMessage = "Cannot edit profile at this time. Please try again later.";
        }
    }
}